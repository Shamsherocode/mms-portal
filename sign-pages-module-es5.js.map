{"version":3,"sources":["webpack:///src/app/sign/pages.routing.ts","webpack:///src/app/sign/pages.module.ts","webpack:///src/app/sign/login/login.component.html","webpack:///node_modules/rxjs/add/operator/toPromise.js","webpack:///src/app/sign/register/register.component.html","webpack:///node_modules/rxjs-compat/add/operator/toPromise.js","webpack:///src/app/sign/login/login.component.ts","webpack:///src/app/sign/register/register.component.ts"],"names":["PagesRoutes","path","children","component","PagesModule","imports","forChild","declarations","Object","defineProperty","exports","value","LoginComponent","element","http","recaptcha3","auth","router","formBuilder","api","message","communicationChannel","deviceID","ques","cred","forgotPassBtnText","forgetUserBtnText","formName","passwordType","passwordType1","passwordType2","formHeading","iconType","iconType1","iconType2","submitted","forgotPassStep","forgotUserstep","username","needCaptchaForSignIn","siteKey","test","Date","nativeElement","sidebarVisible","$page","$","image_src","data","undefined","image_container","append","loading","login","password","forgetPass","answer","secretcode","newpassword","selectedOption","email","newpassword2","init","checkFullPageBackgroundImage","body","document","getElementsByTagName","classList","add","navbar","toggleButton","getElementsByClassName","setTimeout","removeClass","remove","sidebar","model","isValid","headers","bodydata","post","subscribe","result","navigate","setToken","jwt","destroy","sendOTP","option","forgotPasswordStep3","then","response","isOK","getToken","captcha","forgotPasswordStep1","params","forgotPasswordStep2","Number","forgotPasswordStep4","destroyRecaptcha","error","usernameReminder","selector","template","RegisterComponent"],"mappings":"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","file":"sign-pages-module-es5.js","sourcesContent":["import { Routes } from '@angular/router';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\nexport const PagesRoutes: Routes = [{\n    path: '',\n    children: [ {\n        path: 'login',\n        component: LoginComponent\n    }\n]\n}];\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\nimport { PagesRoutes } from './pages.routing';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(PagesRoutes),\n        FormsModule,\n        FormsModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n    ],\n    declarations: [\n        LoginComponent,\n        RegisterComponent,\n    ]\n})\n\nexport class PagesModule {}\n","export default \"<style>\\n  .form-control{border-color:#DDDDDD!important;}\\n  .input-group .form-control:not(:first-child):not(:last-child), .input-group-btn:not(:first-child):not(:last-child){\\n      border-top-right-radius: 0!important;\\n       border-bottom-right-radius: 0!important; \\n  }\\n  h4.header{margin-top:0px;}\\n  small, .small {\\n      margin-bottom: 10px;\\n      float: left;\\n  }\\n  </style>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-absolute fixed-top navbar\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"navbar-wrapper\\\">\\n        <div class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\n            <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\n            <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\n            <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\n          </button>\\n        </div>\\n        <img src=\\\"./assets/img/logo(1).png\\\" alt=\\\"image\\\" style=\\\"margin: 20px; height: 50px;\\\">\\n      </div>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\" aria-controls=\\\"navigation-index\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n        <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n        <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navigation\\\">\\n      </div>\\n    </div>\\n  </nav>\\n  <div class=\\\"text-white bg-dark\\\">\\n  <div class=\\\"wrapper wrapper-full-page\\\">\\n    <div class=\\\"full-page\\\" style=\\\"color: #1e4b63\\\">\\n      <div class=\\\"content\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"col-lg-4 col-md-6 ml-auto mr-auto\\\">\\n  \\n            <div class=\\\"card card-login\\\">\\n              <div class=\\\"card-header \\\">\\n                <div class=\\\"card-header \\\">\\n                  <h4 class=\\\"header text-center\\\">{{this.formHeading}}</h4>\\n                </div>\\n              </div>\\n  \\n            <!-- login form -->\\n            <div *ngIf=\\\"formName=='login'\\\">\\n            <form #f1=\\\"ngForm\\\" novalidate  (ngSubmit)=\\\"loginSubmit(f1.value, f1.valid)\\\">\\n              \\n                <div class=\\\"card-body \\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-single-02\\\"></i>\\n                      </span>\\n                    </div>\\n                   <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [ngModel]=\\\"login.username\\\" required  #username=\\\"ngModel\\\" placeholder=\\\"Username\\\">\\n                   \\n                  </div>\\n                  <small [hidden]=\\\"username.valid || (username.pristine && !f1.submitted)\\\" class=\\\"text-danger\\\">\\n                                    Username is required.\\n                                  </small>\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-lock-circle-open\\\"></i>\\n                      </span>\\n                    </div>\\n                     <input type=\\\"{{this.passwordType}}\\\" class=\\\"form-control\\\" name=\\\"password\\\"  [ngModel]=\\\"login.password\\\" required validateEqual=\\\"confirmPassword\\\" reverse=\\\"true\\\" #password=\\\"ngModel\\\" placeholder=\\\"Password\\\">\\n                     <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"{{this.iconType}}\\\" style=\\\"margin-left: 4px;\\\" (click)=\\\"TogglePasswordType()\\\"></i>\\n                      </span>\\n                    </div>\\n                    </div>\\n                   <small [hidden]=\\\"password.valid || (password.pristine && !f1.submitted)\\\" class=\\\"text-danger\\\">\\n                                    Password is required\\n                                  </small>\\n                    <div style=\\\"text-align: right; font-size: small;\\\">\\n                        <a href=\\\"#\\\" (click)=\\\"forgetPassword()\\\">Forgot Password?</a>\\n                  </div>\\n                  \\n                  \\n                </div>\\n               \\n  \\n                <div class=\\\"card-footer\\\">\\n                <small class=\\\"text-danger\\\">{{this.message}}</small>\\n                  <div *ngIf=\\\"loading\\\"><button class=\\\"btn btn-warning btn-round btn-block mb-3\\\">\\n                  <i class=\\\"fa fa-spinner fa-spin\\\"  style=\\\"align-items: center;\\\"></i></button>\\n                  </div>\\n                   <div *ngIf=\\\"!loading\\\">\\n                   <button type=\\\"submit\\\" class=\\\"btn btn-warning btn-round btn-block mb-3\\\">Sign in</button>\\n                   </div>\\n                </div>\\n  \\n            </form>\\n            </div>\\n            <!-- end -->\\n  \\n            <!-- forget password form -->\\n            <div *ngIf=\\\"formName=='forgotPassForm'\\\">\\n                <form #f2=\\\"ngForm\\\" novalidate  (ngSubmit)=\\\"submitForgotPassword(f2.value, f2.valid)\\\">\\n  \\n                   \\n                    <div style=\\\"text-align: right; font-size: small; padding-right: 4%; color: darkgray;\\\">\\n                      <span>Step {{this.forgotPassStep}}/4</span>\\n                  </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==1\\\">\\n                    <div class=\\\"card-body \\\">\\n                      \\n                      <div class=\\\"input-group\\\">\\n                        \\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-single-02\\\"></i>\\n                          </span>\\n                        </div>\\n                       <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [ngModel]=\\\"login.username\\\" required  #username=\\\"ngModel\\\" placeholder=\\\"Username\\\">\\n                       \\n                      </div>\\n                      <small [hidden]=\\\"username.valid || (username.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                          Username is required.\\n                      </small>\\n                     \\n                      \\n                      <div style=\\\"text-align: right; font-size: small;\\\">\\n                        <a href=\\\"#\\\" (click)=\\\"usernameRedirect()\\\">Forgot Username?</a>\\n                      </div>\\n                      \\n                    </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==2\\\">\\n                    <span style=\\\"padding-left: 5%;\\\">Answer Your Secret Question</span>\\n                    <div class=\\\"card-body \\\">\\n                  \\n                     <div class=\\\"input\\\" style=\\\"margin-bottom:10px;\\\">\\n                       <select class=\\\"form-control\\\">\\n                          <option value=`{{this.ques[0]}}` aria-readonly=\\\"true\\\">{{this.ques[1]}}</option>\\n                      </select>\\n                    </div>\\n                  \\n                    <div class=\\\"input-group\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"nc-icon nc-bulb-63\\\"></i>\\n                        </span>\\n                      </div>\\n                     <input ype=\\\"text\\\" class=\\\"form-control\\\" name=\\\"answer\\\" [ngModel]=\\\"forgetPass.answer\\\" required  #answer=\\\"ngModel\\\" placeholder=\\\"Answer\\\" autocomplete=\\\"off\\\">    \\n                    </div>\\n                    <small [hidden]=\\\"answer.valid || (answer.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                      Answer is required.\\n                    </small>\\n  \\n                  <div style=\\\"text-align: right; font-size: small;\\\">\\n                    <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                </div>\\n  \\n                </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==3\\\">\\n                    \\n                    <span style=\\\"padding-left: 5%;\\\">Receive Verification Code</span>\\n                  <div class=\\\"card-body\\\">\\n                          <input type=\\\"radio\\\" id=\\\"css\\\" name=\\\"selectedOption\\\" [ngModel]=\\\"forgetPass.selectedOption\\\" required  #selectedOption=\\\"ngModel\\\" value=1 style=\\\"margin-top: 10px;\\\">\\n                          <label for=\\\"css\\\" style=\\\"color: black; font-size: 0.971em;\\\"> Email to address {{this.cred[0]}}</label><br>\\n                          <input type=\\\"radio\\\" id=\\\"javascript\\\" name=\\\"selectedOption\\\" [ngModel]=\\\"forgetPass.selectedOption\\\" required  #selectedOption=\\\"ngModel\\\" value=2>\\n                          <label for=\\\"javascript\\\" style=\\\"color: black; font-size: 0.981em;\\\">SMS to phone number {{this.cred[1]}}</label>\\n  \\n                    <div style=\\\"text-align: right; font-size: small;\\\">\\n                      <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                  </div>\\n                  <small [hidden]=\\\"selectedOption.valid || (selectedOption.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                    Please Select..\\n                  </small>\\n  \\n                  </div>\\n                  \\n                    \\n                    </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==4\\\">\\n                    <span style=\\\"padding: 5%;float:left;width:100%;text-align:left;font-size:12px;\\\">Please retrieve the security code form your email account. Remember to check your spam folder if you cannot see the message in your inbox.</span>\\n                    <div class=\\\"card-body \\\">\\n                      <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-key-25\\\"></i>\\n                          </span>\\n                        </div>\\n                       <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"secretcode\\\" [ngModel]=\\\"forgetPass.secretcode\\\" required  #secretcode=\\\"ngModel\\\" placeholder=\\\"Secret Code\\\">\\n                      </div>\\n                      <small [hidden]=\\\"secretcode.valid || (secretcode.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                        Secret Code is required.\\n                      </small>\\n  \\n                      <div style=\\\"text-align: right; font-size: small;\\\">\\n                         <button type=\\\"button\\\" (click)=\\\"resendOTP()\\\" style=\\\"border: 0px;background: none;color:#3D5A80;margin-bottom:10px;\\\">Resend OTP</button>\\n                      </div>\\n  \\n                      <div class=\\\"input-group mb-3\\\" >\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-lock-circle-open\\\"></i>\\n                          </span>\\n                        </div>\\n                         <input type=\\\"{{this.passwordType1}}\\\" onCopy=\\\"return false\\\" onPaste=\\\"return false\\\" class=\\\"form-control\\\" name=\\\"newpassword\\\" [ngModel]=\\\"forgetPass.newpassword\\\" required  #newpassword=\\\"ngModel\\\" placeholder=\\\"New Password\\\">\\n                         <div class=\\\"input-group-append\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"{{this.iconType1}}\\\" style=\\\"margin-left: 4px;\\\" (click)=\\\"TogglePasswordType1()\\\"></i>\\n                          </span>\\n                        </div>\\n                        </div>\\n                      <small [hidden]=\\\"newpassword.valid || (newpassword.pristine &&  !submitted)\\\" class=\\\"text-danger\\\">\\n                        New Password is required.\\n                      </small>\\n                      \\n                      <!-- confirm Password -->\\n                      <div class=\\\"input-group\\\"  [ngClass]=\\\"{'input-group-focus':focus2===true}\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-lock-circle-open\\\"></i>\\n                          </span>\\n                        </div>\\n                         <input type=\\\"{{this.passwordType2}}\\\" onCopy=\\\"return false\\\" onPaste=\\\"return false\\\" class=\\\"form-control\\\" name=\\\"newpassword2\\\" [ngModel]=\\\"forgetPass.newpassword2\\\" required  #newpassword2=\\\"ngModel\\\" placeholder=\\\"Confirm Password\\\">\\n                         <div class=\\\"input-group-append\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"{{this.iconType2}}\\\" style=\\\"margin-left: 4px;\\\" (click)=\\\"TogglePasswordType2()\\\"></i>\\n                          </span>\\n                        </div>\\n                        </div>\\n                      <small [hidden]=\\\"newpassword2.valid || (newpassword2.pristine  && !submitted)\\\" class=\\\"text-danger\\\">\\n                        Confirm Password is required.\\n                      </small>\\n  \\n                      <div style=\\\"text-align: right; font-size: small;\\\">\\n                        <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                    </div>\\n  \\n                    </div>\\n                    </div>\\n                  \\n                    \\n                    \\n                    <div class=\\\"card-footer\\\">\\n                    <small class=\\\"text-danger\\\">{{this.message}}</small>\\n                    \\n                      <div *ngIf=\\\"loading\\\"><button class=\\\"btn btn-warning btn-round btn-block mb-3\\\">\\n                      <i class=\\\"fa fa-spinner fa-spin\\\"  style=\\\"align-items: center;\\\"></i></button>\\n                      </div>\\n                       <div *ngIf=\\\"!loading\\\">\\n                       <button type=\\\"submit\\\" class=\\\"btn btn-warning btn-round btn-block mb-3\\\">{{this.forgotPassBtnText}}</button>\\n                       </div>\\n                    </div>\\n  \\n                </form>\\n            </div>\\n            <!-- end -->\\n  \\n            <!-- Forget Username -->\\n            <div *ngIf=\\\"formName=='forgetUsername'\\\">\\n              <form #f6=\\\"ngForm\\\" (ngSubmit)=\\\"forgetUsername(f6.value, f6.valid)\\\">\\n   \\n                  \\n                  <div style=\\\"text-align: right; font-size: small; padding-right: 4%; color: darkgray;\\\">\\n                    <span>Step {{this.forgotUserstep}}/2</span>\\n                </div>\\n                <div *ngIf=\\\"forgotUserstep==1\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"nc-icon nc-email-85\\\"></i>\\n                        </span>\\n                      </div>\\n                     <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [email]=\\\"true\\\" [ngModel]=\\\"forgetPass.email\\\" required  #email=\\\"ngModel\\\" placeholder=\\\"Email Address\\\" autocomplete=\\\"off\\\">    \\n                    </div>\\n                    <small [hidden]=\\\"email.valid || (email.pristine && !f6.submitted)\\\" class=\\\"text-danger\\\">\\n                      Please enter valid email into Email field.\\n                    </small>\\n  \\n                  <div style=\\\"text-align: right; font-size: small;\\\">\\n                    <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                </div>\\n  \\n                </div>\\n              </div>\\n  \\n                <div *ngIf=\\\"forgotUserstep==2\\\">\\n                <div class=\\\"card-body\\\">\\n                  <span>Check your email for a message from Vision Care Direct\\n                    containing your username.</span>\\n                </div>\\n                </div>\\n                \\n                  \\n  \\n                  <div class=\\\"card-footer\\\">\\n                  <small class=\\\"text-danger\\\">{{this.message}}</small>\\n                    <div *ngIf=\\\"loading\\\"><button class=\\\"btn btn-warning btn-round btn-block mb-3\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\"  style=\\\"align-items: center;\\\"></i></button>\\n                    </div>\\n                     <div *ngIf=\\\"!loading\\\">\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-warning btn-round btn-block mb-3\\\">{{this.forgetUserBtnText}}</button>\\n                     </div>\\n                  </div>\\n  \\n              </form>\\n            </div>\\n            <!-- end -->\\n  \\n            </div>\\n            \\n          </div>\\n        </div>\\n      </div>\\n      <footer class=\\\"footer footer-black  footer-white \\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n            <nav class=\\\"footer-nav\\\">\\n              <span class=\\\"copyright\\\" style=\\\"font-size: small;\\\">\\n                VCD Customer Service | 405 S Holland, Suite A | Wichita, KS 67209<i class=\\\"\\\"></i> \\n              </span>\\n            </nav>\\n            <div class=\\\"credits ml-auto\\\">\\n              <span class=\\\"copyright\\\">\\n                &copy; 2021 Vision Care Direct. All Rights Reserved.<i class=\\\"\\\"></i> \\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n      </footer>\\n    </div>\\n  </div>\\n  </div>\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs-compat/add/operator/toPromise\");\n//# sourceMappingURL=toPromise.js.map","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-wrapper\\\">\\n      <div class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\n          <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\n        </button>\\n      </div>\\n      <a class=\\\"navbar-brand\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\">Paper Dashboard PRO Angular</a>\\n    </div>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\" aria-controls=\\\"navigation-index\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navigation\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-layout-11\\\"></i> Dashboard\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/register']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-book-bookmark\\\"></i> Register\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/login']\\\"  class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-tap-01\\\"></i> Login\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/user']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-satisfied\\\"></i> User\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item  active \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/lock']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-key-25\\\"></i> Lock\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n<div class=\\\"wrapper wrapper-full-page \\\">\\n  <div class=\\\"full-page register-page section-image\\\" filter-color=\\\"black\\\" data-image=\\\"./assets/img/bg/jan-sendereks.jpg\\\">\\n    <div class=\\\"content\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-5 col-md-5 ml-auto\\\">\\n            <div class=\\\"info-area info-horizontal mt-5\\\">\\n              <div class=\\\"icon icon-primary\\\">\\n                <i class=\\\"nc-icon nc-tv-2\\\"></i>\\n              </div>\\n              <div class=\\\"description\\\">\\n                <h5 class=\\\"info-title\\\">Marketing</h5>\\n                <p class=\\\"description\\\">\\n                  We've created the marketing campaign of the website. It was a very interesting collaboration.\\n                </p>\\n              </div>\\n            </div>\\n            <div class=\\\"info-area info-horizontal\\\">\\n              <div class=\\\"icon icon-primary\\\">\\n                <i class=\\\"nc-icon nc-html5\\\"></i>\\n              </div>\\n              <div class=\\\"description\\\">\\n                <h5 class=\\\"info-title\\\">Fully Coded in HTML5</h5>\\n                <p class=\\\"description\\\">\\n                  We've developed the website with HTML5 and CSS3. The client has access to the code using GitHub.\\n                </p>\\n              </div>\\n            </div>\\n            <div class=\\\"info-area info-horizontal\\\">\\n              <div class=\\\"icon icon-info\\\">\\n                <i class=\\\"nc-icon nc-atom\\\"></i>\\n              </div>\\n              <div class=\\\"description\\\">\\n                <h5 class=\\\"info-title\\\">Built Audience</h5>\\n                <p class=\\\"description\\\">\\n                  There is also a Fully Customizable CMS Admin Dashboard for this product.\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-4 col-md-6 mr-auto\\\">\\n            <div class=\\\"card card-signup text-center\\\">\\n              <div class=\\\"card-header \\\">\\n                <h4 class=\\\"card-title\\\">Register</h4>\\n                <div class=\\\"social\\\">\\n                  <button class=\\\"btn btn-icon btn-round btn-twitter\\\">\\n                    <i class=\\\"fa fa-twitter\\\"></i>\\n                  </button>\\n                  <button class=\\\"btn btn-icon btn-round btn-dribbble\\\">\\n                    <i class=\\\"fa fa-dribbble\\\"></i>\\n                  </button>\\n                  <button class=\\\"btn btn-icon btn-round btn-facebook\\\">\\n                    <i class=\\\"fa fa-facebook-f\\\"></i>\\n                  </button>\\n                  <p class=\\\"card-description\\\"> or be classical </p>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body \\\">\\n                <form class=\\\"form\\\" method=\\\"\\\" action=\\\"\\\">\\n                  <div class=\\\"input-group\\\" [ngClass]=\\\"{'input-group-focus':focus===true}\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-single-02\\\"></i>\\n                      </span>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\">\\n                  </div>\\n                  <div class=\\\"input-group\\\" [ngClass]=\\\"{'input-group-focus':focus1===true}\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-circle-10\\\"></i>\\n                      </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Last Name...\\\" class=\\\"form-control\\\" (focus)=\\\"focus1=true\\\" (blur)=\\\"focus1=false\\\">\\n                  </div>\\n                  <div class=\\\"input-group\\\" [ngClass]=\\\"{'input-group-focus':focus2===true}\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-email-85\\\"></i>\\n                      </span>\\n                    </div>\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email...\\\" (focus)=\\\"focus2=true\\\" (blur)=\\\"focus2=false\\\">\\n                  </div>\\n                  <div class=\\\"form-check text-left\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" checked>\\n                      <span class=\\\"form-check-sign\\\"></span>\\n                      I agree to the\\n                      <a href=\\\"#something\\\">terms and conditions</a>.\\n                    </label>\\n                  </div>\\n                </form>\\n              </div>\\n              <div class=\\\"card-footer \\\">\\n                <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-info btn-round\\\">Get Started</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <footer class=\\\"footer footer-black  footer-white \\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <nav class=\\\"footer-nav\\\">\\n            <ul>\\n              <li>\\n                <a href=\\\"https://www.creative-tim.com\\\" target=\\\"_blank\\\">Creative Tim</a>\\n              </li>\\n              <li>\\n                <a href=\\\"http://blog.creative-tim.com/\\\" target=\\\"_blank\\\">Blog</a>\\n              </li>\\n              <li>\\n                <a href=\\\"https://www.creative-tim.com/license\\\" target=\\\"_blank\\\">Licenses</a>\\n              </li>\\n            </ul>\\n          </nav>\\n          <div class=\\\"credits ml-auto\\\">\\n            <span class=\\\"copyright\\\">\\n              &copy; {{test | date: 'yyyy'}}, made with <i class=\\\"fa fa-heart heart\\\"></i> by Creative Tim\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n    </footer>\\n  </div>\\n</div>\\n\";","// HACK: does nothing, because `toPromise` now lives on the `Observable` itself.\n// leaving this module here to prevent breakage.\n//# sourceMappingURL=toPromise.js.map","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder } from '@angular/forms'\nimport { NgRecaptcha3Service } from '../../services/ng-recaptcha3.service';\nimport { AuthService } from '../../services/auth.service';\nimport { ApiService } from '../../services/api.service';\nimport 'rxjs/add/operator/toPromise';\nimport { headers } from 'environments/environment';\n\n\n\ndeclare var $:any;\ndeclare interface User {\n    username?: string; //  must be valid email format\n    password?: string; // required, value must be equal to confirm password.\n    \n}\n\ndeclare interface ForgetPassword {\n    username?: string;\n    answer?: string; // required, value must be equal to confirm password.\n    secretcode?: string;\n    newpassword?: string;\n    selectedOption?: string;\n    email?: string;\n    newpassword2?: string;\n    \n}\n\n@Component({\n    moduleId:module.id,\n    selector: 'login-cmp',\n    templateUrl: './login.component.html',\n    // styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit{\n    message:                string  =   '';\n    communicationChannel:   string  =   '';\n    deviceID:               string  =   '';\n    ques:                   string  =   '';\n    cred:                   string  =   '';\n    forgotPassBtnText:      string  =   'Next';\n    forgetUserBtnText:      string  =   'Next';\n    formName:               string  =   'login';\n    passwordType:           string  =   'password';\n    passwordType1:          string  =   'password';\n    passwordType2:          string  =   'password';\n    formHeading:            string  =   'WELCOME BACK';\n    iconType:               string  =   'fa fa-eye-slash';\n    iconType1:              string  =   'fa fa-eye-slash';\n    iconType2:              string  =   'fa fa-eye-slash';\n    submitted:              boolean =   false;\n    forgotPassStep:         any     =   1;\n    forgotUserstep:         any     =   1;\n    username:               any     =   \"\";\n    option:                 Number;\n    needCaptchaForSignIn:   boolean =   false;\n\n\n    private siteKey     = '6LdhHnodAAAAANT35rUOPEZ0TnF31D6qOqSfby81';\n    public  loading     : boolean;\n    public  login       : User;\n    public  forgetPass  : ForgetPassword;\n  \n\n        focus;\n        focus1;\n        focus2;\n        test : Date = new Date();\n        private toggleButton;\n        private sidebarVisible: boolean;\n        private nativeElement:  Node;\n\n    constructor(private element : ElementRef,\n        private http: HttpClient, \n        private recaptcha3: NgRecaptcha3Service,\n        private auth: AuthService,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private api:ApiService) \n        {\n        this.nativeElement = element.nativeElement;\n        this.sidebarVisible = false;\n        }\n    checkFullPageBackgroundImage(){\n        var $page = $('.full-page');\n        var image_src = $page.data('image');\n\n        if(image_src !== undefined){\n            var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\n            $page.append(image_container);\n        }\n    };\n\n   \n    ngOnInit(){\n    this.forgotPassStep     = 1;\n    this.forgotUserstep     = 1;\n    this.forgotPassBtnText  = 'Next';\n    this.forgetUserBtnText  = 'Next'\n    this.loading            = false;\n    this.login = {\n            username: '',\n            password: '',\n        }\n    this.forgetPass = {\n            answer: '',\n            secretcode: '',\n            newpassword: '',\n            selectedOption: '',\n            email: '',\n            newpassword2: '',\n        }\n\n        this.recaptcha3.init(this.siteKey);\n\n        this.checkFullPageBackgroundImage();\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.add('login-page');\n        var navbar : HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n\n        setTimeout(function(){\n            // after 1000 ms we add the class animated to the login/register card\n            $('.card').removeClass('card-hidden');\n        }, 700)\n    }\n    ngOnDestroy(){\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.remove('login-page');\n    }\n    sidebarToggle(){\n        var toggleButton = this.toggleButton;\n        var body = document.getElementsByTagName('body')[0];\n        var sidebar = document.getElementsByClassName('navbar-collapse')[0];\n        if(this.sidebarVisible == false){\n            setTimeout(function(){\n                toggleButton.classList.add('toggled');\n            },500);\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n        } else {\n            this.toggleButton.classList.remove('toggled');\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n        }\n    }\n\n    TogglePasswordType(){\n        if(this.passwordType=='password' && this.iconType=='fa fa-eye-slash'){\n            this.passwordType='text'\n            this.iconType='fa fa-eye'\n        }else{\n            this.passwordType='password'\n            this.iconType='fa fa-eye-slash'\n            \n        }\n    }\n\n    TogglePasswordType1(){\n        if(this.passwordType1=='password' && this.iconType1=='fa fa-eye-slash'){\n            this.passwordType1='text'\n            this.iconType1='fa fa-eye'\n        }else{\n            this.passwordType1='password'\n            this.iconType1='fa fa-eye-slash'\n        }\n    }\n\n    TogglePasswordType2(){\n        if(this.passwordType2=='password' && this.iconType2=='fa fa-eye-slash'){\n            this.passwordType2='text'\n            this.iconType2='fa fa-eye'\n        }else{\n            this.passwordType2='password'\n            this.iconType2='fa fa-eye-slash'\n        }\n    }\n\n\n    /**\n     * Login function and redirect to the Dashboard\n     * And check credentials is valid or not\n     * and also show error messages on the UI\n     */\n//    async loginSubmit(model: User, isValid: boolean){\n//         if(isValid){\n//             this.loading = true;\n//             this.submitted = true;\n//             await this.recaptcha3.getToken().then(async (captcha)=> {\n//                 await this.api.singIn(model.username, model.password).then(async (response) => {\n//                         this.loading = false;\n//                         console.log(response, 'data')\n//                             if(response){\n//                                 this.message = \"\"\n//                                 this.destroyRecaptcha()\n//                                 this.router.navigate(['provider'])\n//                             }else{\n//                             if(response.errorMessage){\n//                                 this.message = response.errorMessage\n//                             }else{\n//                                 this.message = response.message\n//                             }\n//                             }\n        \n//     \t\t\t\t});\t\n//                 })        \n//             }            \n//         }\n\n    loginSubmit(model: User, isValid: boolean){\n        if(isValid){\n            this.loading = true;\n            let headers = {\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json'\n                })\n            }\n            let bodydata = {\n                email: model.username,\n                password: model.password,\n            }\n            this.submitted = true;\n            this.http.post('http://www.api.psd2htmlx.com/api/login', bodydata, headers).subscribe((result:any) => {\n                this.loading = false;   \n                this.router.navigate(['provider']) \n                this.auth.setToken(result.jwt)\n            })\n        }\n    }\n\n                \n    // Destroy captcha function\n    destroyRecaptcha() {\n        this.recaptcha3.destroy();\n      }\n\n\n    // Redirect on the Forget Password Page\n    forgetPassword(){\n        this.submitted      =   false;\n        this.loading        =   false;\n        this.message        =   \"\"\n        this.formName       =   'forgotPassForm';\n        this.forgotPassStep =   1;\n        this.formHeading    =   'FORGOT PASSWORD';\n        \n        \n     }\n\n    // Redirect on the Login Page\n    loginRedirect(){\n        this.message        =   \"\"\n        this.formName       =   'login';\n        this.loading        =   false;\n        this.formHeading    =   'WELCOME BACK';\n        \n    }\n\n    // Redirect on the Forget Username Form\n    usernameRedirect(){\n        this.forgotUserstep =   1;\n        this.message        =   \"\"\n        this.formName       =   'forgetUsername';\n        this.loading        =   false;\n        this.formHeading    =   'FORGOT USERNAME';\n    }\n\n    // Resend OTP when user want to new code and code expire.\n    resendOTP(){\n        this.sendOTP(this.option)\n\n    }\n\n    /**\n     * Send OTP for forget Password to the registered mobile and email address.\n     */\n    async sendOTP(option){\n         await this.api.forgotPasswordStep3(option).then(async (response) => {\n                            if(response.isOK){\n                            this.message = \"\"\n                            this.forgotPassStep = 4;\n                            this.forgotPassBtnText ='Submit';\n                            this.loading = false;\n                            this.submitted = false;\n                            } else {\n                                this.message = response.message;\n                                this.loading = false;\n                            }\n                        \n                    });  \n    }\n\n    /**\n     * Forget Password function\n     * Step 1\n     * Check entered username is valid or not if valid move on the Step 2\n     */\n    async submitForgotPassword(model: ForgetPassword, isValid: boolean){\n        this.submitted = true;\n        if(isValid){\n        this.loading = true;\n        await this.recaptcha3.getToken().then(async(captcha) => {\n            if(this.forgotPassStep ==1){  \n                await this.api.forgotPasswordStep1(model.username,captcha).then(async (response) => {\n                        if(response.isOK){\n                            this.ques = response.params\n                            this.message = \"\"\n                            this.forgotPassStep = 2;\n                            this.loading = false;\n                            this.submitted = false;\n                        } else{\n                            this.message = response.message\n                            this.loading = false;\n                            \n                        }\n                 });\n                \n                }else if(this.forgotPassStep ==2){ \n\n                /**\n                 * Step 2\n                 * Check entered security answer is valid or not if valid move on the Step 3\n                 */\n                    \n                await this.api.forgotPasswordStep2(this.ques[0],model.answer,captcha).then(async (response) => {\n                        if(response.isOK){\n                            this.cred = response.params\n                            this.message = \"\"\n                            this.forgotPassStep = 3;\n                            this.loading = false;\n                            this.submitted = false;\n                        } else {\n                            this.message = response.message;\n                            this.loading = false;\n                        }\n                    \n                    \n                });\n\n                }else if(this.forgotPassStep ==3){ \n\n                /**\n                 * Step 3\n                 * send OTP on selected communication medium and move on the Step 4\n                 */\n\n                    this.option =  Number(model.selectedOption)\n                    this.sendOTP(this.option);\n\n                }else if(this.forgotPassStep ==4){\n\n                /**\n                 * Step 4\n                 * Check comfirm password is valid or not if valid move on the Step 5\n                 */    \n                if(model.newpassword != model.newpassword2){\n                    this.message = \"Password does not match\";\n                    this.loading = false;\n                } else {\n\n                /**\n                 * Step 5\n                 * Check entered fields or OTP is valid or not if valid redirect to the Dashboarde\n                 */\n                \n                await this.api.forgotPasswordStep4(model.secretcode,model.newpassword).then(async (response) => {\n                            if(response.isOK){\n                            this.message = \"\"\n                            this.destroyRecaptcha();\n                            this.router.navigate(['provider'])\n                        } else {\n                            this.message = response.message;\n                            this.loading = false;\n                        }\n                       \n                     });\n                            \n                    }\n                    \n                }\n            }, error => {\n                this.loading = false;\n                this.message = error.message   \n                });\n            }\n\n}\n    \n   \n    \n    \n    /**\n     * Forget Username Function\n     * Check entered email address is valid or not if valid move on the Step 1\n     */\n    async forgetUsername(model: ForgetPassword, isValid: boolean){\n        if(isValid){\n            this.loading = true;\n            await this.recaptcha3.getToken().then(async (captcha) => {\n                if(this.forgotUserstep ==1){\n                \n            /**\n             * Forget Username Function\n             * Send username to the entered email address and move on the step 2\n             */\n                    \n            await this.api.usernameReminder(model.email,captcha).then(async (response) => {\n                        if(response.isOK){\n                        this.message = \"\"\n                                this.loading = false;\n                                this.forgotUserstep = 2;\n                                this.forgetUserBtnText ='Done'\n                        } else {\n                            this.message = response.message;\n                            this.loading = false;\n                        }\n                    \n                    \n                });\n                    \n                   \n               }else if(this.forgotUserstep == 2){\n\n            /**\n             * Forget Username Function\n             * After successfully send the Username on the registered email addres and redirect to the login page.\n             */\n                this.formName = 'login';\n                this.loading = false;\n               }\n\n            }, error => {\n                this.loading = false;\n                this.message = error.message\n                       \n            });\n\n        }\n    }\n\n}\n","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\n\ndeclare var $:any;\n\n@Component({\n    moduleId:module.id,\n    selector: 'register-cmp',\n    templateUrl: './register.component.html'\n})\n\nexport class RegisterComponent implements OnInit{\n  focus;\n  focus1;\n  focus2;\n    test : Date = new Date();\n    private toggleButton;\n    private sidebarVisible: boolean;\n    private nativeElement: Node;\n\n    constructor(private element : ElementRef) {\n        this.nativeElement = element.nativeElement;\n        this.sidebarVisible = false;\n    }\n    checkFullPageBackgroundImage(){\n        var $page = $('.full-page');\n        var image_src = $page.data('image');\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.add('register-page');\n        if(image_src !== undefined){\n            var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\n            $page.append(image_container);\n        }\n    };\n\n    ngOnInit(){\n        this.checkFullPageBackgroundImage();\n\n        var navbar : HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n\n        setTimeout(function(){\n            // after 1000 ms we add the class animated to the login/register card\n            $('.card').removeClass('card-hidden');\n        }, 700)\n    }\n    ngOnDestroy(){\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.remove('register-page');\n    }\n    sidebarToggle(){\n        var toggleButton = this.toggleButton;\n        var body = document.getElementsByTagName('body')[0];\n        var sidebar = document.getElementsByClassName('navbar-collapse')[0];\n        if(this.sidebarVisible == false){\n            setTimeout(function(){\n                toggleButton.classList.add('toggled');\n            },500);\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n        } else {\n            this.toggleButton.classList.remove('toggled');\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n        }\n    }\n}\n"]}